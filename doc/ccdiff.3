.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "STDIN 1"
.TH STDIN 1 "2022-01-01" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ccdiff \- Colored Character diff
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& ccdiff [options] file1|\- file2|\-
\&
\& ccdiff \-\-help
\& ccdiff \-\-man
\& ccdiff \-\-info
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SH "OPTIONS"
.IX Header "OPTIONS"
.SS "Command line options"
.IX Subsection "Command line options"
.IP "\-\-help \-?" 2
.IX Item "--help -?"
Show a summary of the available command-line options and exit.
.IP "\-\-version \-V" 2
.IX Item "--version -V"
Show the version and exit.
.IP "\-\-man" 2
.IX Item "--man"
Show this manual using pod2man and nroff.
.IP "\-\-info" 2
.IX Item "--info"
Show this manual using pod2text.
.IP "\-\-utf\-8 \-U" 2
.IX Item "--utf-8 -U"
All I/O (streams to compare and standard out) are in \s-1UTF\-8.\s0
.IP "\-\-unified[=3] \-u [3]" 2
.IX Item "--unified[=3] -u [3]"
Generate a unified diff. The number of context lines is optional. When omitted
it defaults to 3. Currently there is no provision of dealing with overlapping
diff chunks. If the common part between two diff chunks is shorter than twice
the number of context lines, some lines may show twice.
.Sp
The default is to use traditional diff:
.Sp
.Vb 4
\& 5,5c5,5
\& < Sat Dec 18 07:00:33 1993,I.O.D.U.,,756194433,1442539
\& \-\-\-
\& > Sat Dec 18 07:08:33 1998,I.O.D.U.,,756194433,1442539
.Ve
.Sp
a unified diff (\-u1) would be
.Sp
.Vb 5
\& 5,5c5,5
\&  Tue Sep  6 05:43:59 2005,B.O.Q.S.,,1125978239,1943341
\& \-Sat Dec 18 07:00:33 1993,I.O.D.U.,,756194433,1442539
\& +Sat Dec 18 07:08:33 1998,I.O.D.U.,,756194433,1442539
\&  Mon Feb 23 10:37:02 2004,R.X.K.S.,van,1077529022,1654127
.Ve
.IP "\-\-verbose[=1] \-v[1]" 2
.IX Item "--verbose[=1] -v[1]"
Show an additional line for each old or new section in a change chunk (not for
added or deleted lines) that shows the hexadecimal value of each character. If
\&\f(CW\*(C`\-\-utf\-8\*(C'\fR is in effect, it will show the Unicode character name(s).
.Sp
This is a debugging option, so invisible characters can still be \*(L"seen\*(R".
.Sp
\&\f(CW\*(C`\-\-verbose\*(C'\fR accepts an optional verbosity-level. On level 2 and up, all
horizontal changes get left-and-right markers inserted to enable seeing the
location of the \s-1ZERO WIDTH\s0 or invisible characters. With level 3 and up and
Unicode enabled, the changed characters will also show the codepoint in hex.
.Sp
An example of this:
.Sp
With \-Uu0v0:
.Sp
.Vb 3
\& 1,1c1,1
\& \- A  BCDE Fg
\& + A BcdEXFg
.Ve
.Sp
With \-Uu0v1:
.Sp
.Vb 5
\& 1,1c1,1
\& \- A  BCDE Fg
\& \- \-\- verbose : SPACE, LATIN CAPITAL LETTER C, LATIN CAPITAL LETTER D, SPACE
\& + A BcdEXFg
\& + \-\- verbose : LATIN SMALL LETTER C, LATIN SMALL LETTER D, ZERO WIDTH SPACE
.Ve
.Sp
With \-Uu0v2:
.Sp
.Vb 5
\& 1,1c1,1
\& \- A X XBXCDXEX XFg
\& \- \-\- verbose : SPACE, LATIN CAPITAL LETTER C, LATIN CAPITAL LETTER D, SPACE
\& + A BXcdXEXXXFg
\& + \-\- verbose : LATIN SMALL LETTER C, LATIN SMALL LETTER D, ZERO WIDTH SPACE
.Ve
.Sp
With \-Uu0v3:
.Sp
.Vb 5
\& 1,1c1,1
\& \- A X XBXCDXEX XFg
\& \- \-\- verbose : SPACE (U+000020), LATIN CAPITAL LETTER C (U+000043), LATIN CAPITAL LETTER D (U+000044), SPACE (U+000020)
\& + A BXcdXEXXXFg
\& + \-\- verbose : LATIN SMALL LETTER C (U+000063), LATIN SMALL LETTER D (U+000064), ZERO WIDTH SPACE (U+00200B)
.Ve
.Sp
With \-Uu0v2 \-\-ascii:
.Sp
.Vb 5
\& 1,1c1,1
\& \- A > <B>CD<E> <Fg
\& \- \-\- verbose : SPACE, LATIN CAPITAL LETTER C, LATIN CAPITAL LETTER D, SPACE
\& + A B>cd<E>X<Fg
\& + \-\- verbose : LATIN SMALL LETTER C, LATIN SMALL LETTER D, ZERO WIDTH SPACE
.Ve
.Sp
the word \*(L"verbose\*(R" and the character markers will be displayed using the
\&\f(CW\*(C`verbose\*(C'\fR color. The characters used for the markers can be defined in your
configuration file as \f(CW\*(C`chr_cml\*(C'\fR (the character used as marker on the left)
and \f(CW\*(C`chr_cmr\*(C'\fR (the character used as marker on the right).
.IP "\-\-markers \-m" 2
.IX Item "--markers -m"
Use markers under each changed character in change-chunks.
.Sp
\&\f(CW\*(C`\-\-markers\*(C'\fR is especially useful if the terminal does not support colors, or
if you want to copy/paste the output to (\s-1ASCII\s0) mail. See also \f(CW\*(C`\-\-ascii\*(C'\fR. The
markers will have the same color as added or deleted text.
.Sp
This will look like (with unified diff):
.Sp
.Vb 5
\& 5,5c5,5
\& \-Sat Dec 18 07:08:33 1998,I.O.D.U.,,756194433,1442539
\& \-               X       X
\& +Sat Dec 18 07:00:33 1993,I.O.D.U.,,756194433,1442539
\& +               X       X
.Ve
.Sp
The characters used for the markers can be defined in your configuration file
as \f(CW\*(C`chr_old\*(C'\fR (the character used as marker under removed characters) and
\&\f(CW\*(C`chr_new\*(C'\fR (the character used as marker under added characters).
.Sp
If \f(CW\*(C`\-\-ellipsis\*(C'\fR is also in effect and either the \f(CW\*(C`chr_eli\*(C'\fR is longer than
one character or \f(CW\*(C`\-\-verbose\*(C'\fR level is over 2, this option is automatically
disabled.
.IP "\-\-ascii \-a" 2
.IX Item "--ascii -a"
Use (colored) \s-1ASCII\s0 indicators instead of Unicode. The default indicators are
Unicode characters that stand out better. The markers will have the same color
as added or deleted text.
.Sp
For the vertical markers (\f(CW\*(C`\-m\*(C'\fR) that would look like:
.Sp
.Vb 5
\& 5,5c5,5
\& \-Sat Dec 18 07:08:33 1998,I.O.D.U.,,756194433,1442539
\& \-               ^       ^
\& +Sat Dec 18 07:00:33 1993,I.O.D.U.,,756194433,1442539
\& +               ^       ^
.Ve
.Sp
For the positional indicators, I did consider using U+034e (\s-1COMBINING UPWARDS
ARROW BELOW\s0), but as most terminals are probably unable to show it due to line
height changes, I did not pursue the idea.
.IP "\-\-pink \-p" 2
.IX Item "--pink -p"
Change the default \f(CW\*(C`red\*(C'\fR for deleted text to the color closest to pink that
is supported by Term::ANSIColor: \f(CW\*(C`magenta\*(C'\fR.
.IP "\-\-reverse \-r" 2
.IX Item "--reverse -r"
Reverse/invert the foreground and background for the colored indicators.
.Sp
If the foreground color has \f(CW\*(C`bold\*(C'\fR, it will be stripped from the new background
color.
.IP "\-\-swap \-s" 2
.IX Item "--swap -s"
Swap the colors for new and old.
.IP "\-\-list\-colors" 2
.IX Item "--list-colors"
List available colors and exit.
.IP "\-\-no\-colors" 2
.IX Item "--no-colors"
Disable all colors. Useful for redirecting the diff output to a file that is to
be included in documentation.
.Sp
This is the default if the environment variable \f(CW$NO_COLOR\fR has a true value or
if the environment variable \f(CW$CLICOLOR\fR is set to a false value.  If set,
\&\f(CW$CLICOLOR_FORCE\fR will overrule the default of \f(CW$NO_COLOR\fR.
.IP "\-\-old=color" 2
.IX Item "--old=color"
Define the foreground color for deleted text.
.IP "\-\-new=color" 2
.IX Item "--new=color"
Define the foreground color for added text.
.IP "\-\-bg=color" 2
.IX Item "--bg=color"
Define the background color for changed text.
.IP "\-\-index \-\-idx \-I" 2
.IX Item "--index --idx -I"
Prefix position indicators with an index.
.Sp
.Vb 3
\& [001] 5,5c5,5
\& \-Sat Dec 18 07:08:33 1998,I.O.D.U.,,756194433,1442539
\& +Sat Dec 18 07:00:33 1993,I.O.D.U.,,756194433,1442539
.Ve
.Sp
If a positive number is passed (\f(CW\*(C`\-\-index=4\*(C'\fR or \f(CW\*(C`\-I 4\*(C'\fR), display just the
chunk with that index, using the \f(CW\*(C`verbose\*(C'\fR color:
.Sp
This is useful in combination with \f(CW\*(C`\-\-verbose\*(C'\fR.
.IP "\-\-threshold=2 \-t 2" 2
.IX Item "--threshold=2 -t 2"
Defines the number of lines a change block may differ before the fall-back of
horizontal diff to vertical diff.
.Sp
If a chunk describes a change, and the number of lines in the original block
has fewer or more lines than the new block and that difference exceeds this
threshold, \f(CW\*(C`ccdiff\*(C'\fR will fall-back to vertical diff.
.IP "\-\-heuristics=n \-h n" 2
.IX Item "--heuristics=n -h n"
Defines the percentage of character-changes a change block may differ before
the fall-back of horizontal diff to vertical diff.
.Sp
This percentage is calculated as \f(CW\*(C`(characters removed + characters added) /
(2 * characters unchanged))\*(C'\fR.
.IP "\-\-ellipsis=n \-e n" 2
.IX Item "--ellipsis=n -e n"
Defines the number of characters to keep on each side of a horizontal-equal
segment. The default is \f(CW0\fR, meaning do not compress.
.Sp
If set to a positive number, and the length of a segment of equal characters
inside a horizontal diff is longer than twice this value, the middle part is
replaced with \f(CW\*(C`X U02508 \eN{BOX DRAWINGS LIGHT QUADRUPLE DASH HORIZONTAL}\*(C'\fR
(instead of X U02026, as \s-1HORIZONTAL ELLIPSIS\s0 does not stand out enough).
.Sp
With \f(CW\*(C`\-u0me3\*(C'\fR that would be like
.Sp
.Vb 5
\& 5,5c5,5
\& \-SatX07:08:33X 1998,I.X539
\& \-        X        X
\& +SatX07:00:33X 1993,I.X539
\& +        X        X
.Ve
.Sp
With \f(CW\*(C`\-u0e3 \-v2\*(C'\fR like
.Sp
.Vb 5
\& 5,5c5,5
\& \-SatX9X07:0X0X:33 199X3X,I.X23X539
\& \- \-\- verbose : DIGIT ZERO, DIGIT THREE
\& +SatX9X07:0X8X:33 199X8X,I.X23X539
\& + \-\- verbose : DIGIT EIGHT, DIGIT EIGHT
.Ve
.Sp
The text used for the replaced text can be defined in your configuration file
as \f(CW\*(C`chr_eli\*(C'\fR and/or \f(CW\*(C`chr_eli_v\*(C'\fR.
.IP "\-\-ignore\-case \-i" 2
.IX Item "--ignore-case -i"
Ignore case on comparison.
.IP "\-\-ignore\-all\-space \-w" 2
.IX Item "--ignore-all-space -w"
Ignore all white-space changes. This will set all options \f(CW\*(C`\-b\*(C'\fR, \f(CW\*(C`\-Z\*(C'\fR, \f(CW\*(C`\-E\*(C'\fR,
and \f(CW\*(C`\-B\*(C'\fR.
.IP "\-\-ignore\-trailing\-space \-Z" 2
.IX Item "--ignore-trailing-space -Z"
Ignore changes in trailing white-space (tabs and spaces).
.IP "\-\-ignore\-ws|ignore\-space\-change \-b" 2
.IX Item "--ignore-ws|ignore-space-change -b"
Ignore changes in horizontal white-space (tabs and spaces). This does not
include white-space changes that split non-white-space or remove white-space
between two non-white-space elements.
.IP "\-\-ignore\-tab\-expansion \-E" 2
.IX Item "--ignore-tab-expansion -E"
\&\s-1NYI\s0
.IP "\-\-ignore\-blank\-lines \-B" 2
.IX Item "--ignore-blank-lines -B"
\&\fBJust Partly Implemented\fR (\s-1WIP\s0)
.SS "Configuration files"
.IX Subsection "Configuration files"
In order to be able to overrule the defaults set in \f(CW\*(C`ccdiff\*(C'\fR, one can set
options specific for this login. The following option files are looked for
in this order:
.PP
.Vb 3
\& \- $HOME/ccdiff.rc
\& \- $HOME/.ccdiffrc
\& \- $HOME/.config/ccdiff
.Ve
.PP
and evaluated in that order. Any options specified in a file later in that
chain will overwrite previously set options.
.PP
Option files are only read and evaluated if they are not empty and not writable
by others than the owner.
.PP
The syntax of the file is one option per line, where leading and trailing
white-space is ignored. If that line then starts with one of the options
listed below, followed by optional white-space followed by either an \f(CW\*(C`=\*(C'\fR or
a \f(CW\*(C`:\*(C'\fR, followed by optional white-space and the values, the value is assigned
to the option. The values \f(CW\*(C`no\*(C'\fR and \f(CW\*(C`false\*(C'\fR (case insensitive) are aliases
for \f(CW0\fR. The values \f(CW\*(C`yes\*(C'\fR and \f(CW\*(C`true\*(C'\fR are aliases to \f(CW\*(C`\-1\*(C'\fR (\f(CW\*(C`\-1\*(C'\fR being a
true value).
.PP
Between parens is the corresponding command-line option.
.IP "unified (\-u)" 2
.IX Item "unified (-u)"
If you prefer unified-diff over old-style diff by default, set this to the
desired number of context lines:
.Sp
.Vb 1
\& unified : 3
.Ve
.Sp
The default is undefined
.IP "markers (\-m)" 2
.IX Item "markers (-m)"
.Vb 1
\& markers : false
.Ve
.Sp
Defines if markers should be used under changed characters. The default is to
use colors only. The \f(CW\*(C`\-m\*(C'\fR command line option will toggle the option when set
from a configuration file.
.IP "ascii (\-a)" 2
.IX Item "ascii (-a)"
.Vb 1
\& ascii   : false
.Ve
.Sp
Defines to use \s-1ASCII\s0 markers instead of Unicode markers. The default is to use
Unicode markers.
.IP "reverse (\-r)" 2
.IX Item "reverse (-r)"
.Vb 1
\& reverse : false
.Ve
.Sp
Defines if changes are displayed as foreground-color over background-color
or background-color over foreground-color. The default is \f(CW\*(C`false\*(C'\fR, so it will
color the changes with the appropriate color (\f(CW\*(C`new\*(C'\fR or \f(CW\*(C`old\*(C'\fR) over the
default background color.
.IP "swap (\-s)" 2
.IX Item "swap (-s)"
.Vb 1
\& swap    : false
.Ve
.Sp
Swap the colors for new and old.
.IP "new (\-\-new)" 2
.IX Item "new (--new)"
.Vb 1
\& new     : green
.Ve
.Sp
Defines the color to be used for added text. The default is \f(CW\*(C`green\*(C'\fR.
.Sp
The color \f(CW\*(C`none\*(C'\fR is also accepted and disables this color.
.Sp
Any color accepted by Term::ANSIColor is allowed. Any other color will
result in a warning. This option can include \f(CW\*(C`bold\*(C'\fR either as prefix or
as suffix.
.Sp
This option may also be specified as
.Sp
.Vb 4
\& new\-color
\& new_color
\& new\-colour
\& new_colour
.Ve
.IP "old (\-\-old)" 2
.IX Item "old (--old)"
.Vb 1
\& old     : red
.Ve
.Sp
Defines the color to be used for deleted text. The default is \f(CW\*(C`red\*(C'\fR.
.Sp
The color \f(CW\*(C`none\*(C'\fR is also accepted and disables this color.
.Sp
Any color accepted by Term::ANSIColor is allowed. Any other color will
result in a warning. This option can include \f(CW\*(C`bold\*(C'\fR either as prefix or
as suffix.
.Sp
This option may also be specified as
.Sp
.Vb 4
\& old\-color
\& old_color
\& old\-colour
\& old_colour
.Ve
.IP "bg (\-\-bg)" 2
.IX Item "bg (--bg)"
.Vb 1
\& bg      : white
.Ve
.Sp
Defines the color to be used as background for changed text. The default is
\&\f(CW\*(C`white\*(C'\fR.
.Sp
The color \f(CW\*(C`none\*(C'\fR is also accepted and disables this color.
.Sp
Any color accepted by Term::ANSIColor is allowed. Any other color will
result in a warning. The \f(CW\*(C`bold\*(C'\fR attribute is not allowed.
.Sp
This option may also be specified as
.Sp
.Vb 9
\& bg\-color
\& bg_color
\& bg\-colour
\& bg_colour
\& background
\& background\-color
\& background_color
\& background\-colour
\& background_colour
.Ve
.IP "header (\-H \-\-header \-\-HC=color \-\-header\-color=color)" 2
.IX Item "header (-H --header --HC=color --header-color=color)"
.Vb 2
\& header  : 1
\& header  : blue_on_white
.Ve
.Sp
Defines if a header is displayed above the diff (default is 1), supported
colors are allowed.
.Sp
If the value is a valid supported color, it will show the header in that
color scheme.  To disable the header set it to \f(CW0\fR in the \s-1RC\s0 file or use
\&\f(CW\*(C`\-\-no\-header\*(C'\fR as a command line argument.
.IP "verbose" 2
.IX Item "verbose"
.Vb 1
\& verbose : cyan
.Ve
.Sp
Defines the color to be used as color for the verbose tag. The default is
\&\f(CW\*(C`cyan\*(C'\fR. This color will only be used under \f(CW\*(C`\-\-verbose\*(C'\fR.
.Sp
The color \f(CW\*(C`none\*(C'\fR is also accepted and disables this color.
.Sp
Any color accepted by Term::ANSIColor is allowed. Any other color will
result in a warning.
.Sp
This option may also be specified as
.Sp
.Vb 4
\& verbose\-color
\& verbose_color
\& verbose\-colour
\& verbose_colour
.Ve
.IP "utf8 (\-U)" 2
.IX Item "utf8 (-U)"
.Vb 1
\& utf8    : yes
.Ve
.Sp
Defines whether all I/O is to be interpreted as \s-1UTF\-8.\s0 The default is \f(CW\*(C`no\*(C'\fR.
.Sp
This option may also be specified as
.Sp
.Vb 3
\& unicode
\& utf
\& utf\-8
.Ve
.IP "index (\-I)" 2
.IX Item "index (-I)"
.Vb 1
\& index   : no
.Ve
.Sp
Defines if the position indication for a change chunk is prefixed with an
index number. The default is \f(CW\*(C`no\*(C'\fR. The index is 1\-based.
.Sp
Without this option, the position indication would be like
.Sp
.Vb 3
\& 5,5c5,5
\& 19,19d18
\& 42a42,42
.Ve
.Sp
with this option, it would be
.Sp
.Vb 3
\& [001] 5,5c5,5
\& [002] 19,19d18
\& [005] 42a42,42
.Ve
.Sp
When this option contains a positive integer, \f(CW\*(C`ccdiff\*(C'\fR will only show the
diff chunk with that index.
.IP "emacs" 2
.IX Item "emacs"
.Vb 1
\& emacs   : no
.Ve
.Sp
If this option is yes/true, calling \f(CW\*(C`ccdiff\*(C'\fR with just one single argument,
and that argument being an existing file, the arguments will act as
.Sp
.Vb 1
\& $ ccdiff file~ file
.Ve
.Sp
if file~ exists.
.IP "threshold (\-t)" 2
.IX Item "threshold (-t)"
.Vb 1
\& threshold : 2
.Ve
.Sp
Defines the number of lines a change block may differ before the fall-back of
horizontal diff to vertical diff.
.IP "heuristics (\-h)" 2
.IX Item "heuristics (-h)"
.Vb 1
\& heuristics : 40
.Ve
.Sp
Defines the percentage of character-changes a change block may differ before
the fall-back of horizontal diff to vertical diff. The default is undefined,
meaning no fallback based on heuristics.
.IP "ellipsis (\-e)" 2
.IX Item "ellipsis (-e)"
.Vb 1
\& ellipsis : 0
.Ve
.Sp
Defines the number of characters to keep on each side of a horizontal-equal
segment. The default is \f(CW0\fR, meaning to not compress. See also \f(CW\*(C`chr_eli\*(C'\fR.
.IP "chr_old" 2
.IX Item "chr_old"
.Vb 1
\& chr_old : U+25BC
.Ve
.Sp
Defines the character used to indicate the position of removed text on the
line below the text when option \f(CW\*(C`\-m\*(C'\fR is in effect.
.IP "chr_new" 2
.IX Item "chr_new"
.Vb 1
\& chr_new : U+25B2
.Ve
.Sp
Defines the character used to indicate the position of added text on the
line below the text when option \f(CW\*(C`\-m\*(C'\fR is in effect.
.IP "chr_cml" 2
.IX Item "chr_cml"
.Vb 1
\& chr_cml : U+21B1
.Ve
.Sp
Defines the character used to indicate the starting position of changed text
in a line when verbose level is 3 and up.
.IP "chr_cmr" 2
.IX Item "chr_cmr"
.Vb 1
\& chr_cmr : U+21B0
.Ve
.Sp
Defines the character used to indicate the ending position of changed text
in a line when verbose level is 3 and up.
.IP "chr_eli" 2
.IX Item "chr_eli"
.Vb 1
\& chr_eli : U+21B0
.Ve
.Sp
Defines the character used to indicate omitted text in large unchanged text
when \f(CW\*(C`\-\-ellipsis\*(C'\fR/\f(CW\*(C`\-e\*(C'\fR is in effect.
.Sp
This character is not equally well visible on all terminals or in all fonts,
so you might want to change it to something that stands out better in your
environment. Possible suggestions:
.Sp
.Vb 10
\& X U+2026 HORIZONTAL ELLIPSIS
\& X U+2034 TRIPLE PRIME
\& X U+2037 REVERSED TRIPLE PRIME
\& X U+2194 LEFT RIGHT ARROW
\& X U+21ad LEFT RIGHT WAVE ARROW
\& X U+21ae LEFT RIGHT ARROW WITH STROKE
\& X U+21b9 LEFTWARDS ARROW TO BAR OVER RIGHTWARDS ARROW TO BAR
\& X U+21c4 RIGHTWARDS ARROW OVER LEFTWARDS ARROW
\& X U+21c6 LEFTWARDS ARROW OVER RIGHTWARDS ARROW
\& X U+21ce LEFT RIGHT DOUBLE ARROW WITH STROKE
\& X U+21d4 LEFT RIGHT DOUBLE ARROW
\& X U+21f9 LEFT RIGHT ARROW WITH VERTICAL STROKE
\& X U+21fc LEFT RIGHT ARROW WITH DOUBLE VERTICAL STROKE
\& X U+21ff LEFT RIGHT OPEN\-HEADED ARROW
\& X U+224b TRIPLE TILDE
\& X U+2504 BOX DRAWINGS LIGHT TRIPLE DASH HORIZONTAL
\& X U+2505 BOX DRAWINGS HEAVY TRIPLE DASH HORIZONTAL
\& X U+2508 BOX DRAWINGS LIGHT QUADRUPLE DASH HORIZONTAL
\& X U+2509 BOX DRAWINGS HEAVY QUADRUPLE DASH HORIZONTAL
\& X U+29fb TRIPLE PLUS
\& X U+2b0c LEFT RIGHT BLACK ARROW
.Ve
.IP "chr_eli_v" 2
.IX Item "chr_eli_v"
.Vb 1
\& chr_eli_v : U+21A4U+21A6
.Ve
.Sp
When using \f(CW\*(C`\-\-ellipsis\*(C'\fR with \f(CW\*(C`\-\-verbose\*(C'\fR level 2 or up, the single character
indicator will be replaced with this character. If it is 2 characters wide, the
length of the compressed part is put between the characters.
.Sp
A suggested alternative might be U+21E4U+21E5
.SH "Git integration"
.IX Header "Git integration"
You can use ccdiff to show diffs in git. It may work like this:
.PP
.Vb 9
\& $ git config \-\-global diff.tool ccdiff
\& $ git config \-\-global difftool.prompt false
\& $ git config \-\-global difftool.ccdiff.cmd \*(Aqccdiff \-\-utf\-8 \-u \-r $LOCAL $REMOTE\*(Aq
\& $ git difftool SHA~..SHA
\& $ wget https://github.com/Tux/App\-ccdiff/blob/master/Files/git\-ccdiff \e
\&    \-O ~/bin/git\-ccdiff
\& $ perl \-pi \-e \*(Aqs{/pro/bin/perl}{/usr/bin/env perl}\*(Aq ~/bin/git\-ccdiff
\& $ chmod 755 ~/bin/git\-ccdiff
\& $ git ccdiff SHA
.Ve
.PP
Of course you can use \f(CW\*(C`curl\*(C'\fR instead of \f(CW\*(C`wget\*(C'\fR and you can choose your own
(fixed) path to \f(CW\*(C`perl\*(C'\fR instead of using \f(CW\*(C`/usr/bin/env\*(C'\fR.
.PP
From then on you can do
.PP
.Vb 2
\& $ git ccdiff
\& $ git ccdiff 5c5a39f2
.Ve
.SH "CAVEATS"
.IX Header "CAVEATS"
Due to the implementation, where both sides of the comparison are completely
kept in memory, this tool might not be able to deal with (very) large datasets.
.SS "Speed"
.IX Subsection "Speed"
There are situations where Algorithm::Diff takes considerably more time
compared to e.g. \s-1GNU\s0 diff. Installing Algorithm::Diff::XS will make
\&\f(CW\*(C`ccdiff\*(C'\fR a lot faster. \f(CW\*(C`ccdiff\*(C'\fR will choose Algorithm::Diff::XS if
available.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Algorithm::Diff::XS, Algorithm::Diff, Text::Diff
.SH "AUTHOR"
.IX Header "AUTHOR"
H.Merijn Brand
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
.Vb 1
\& Copyright (C) 2018\-2022 H.Merijn Brand.  All rights reserved.
.Ve
.PP
This library is free software;  you can redistribute and/or modify it under
the same terms as The Artistic License 2.0.
